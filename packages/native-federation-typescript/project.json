{
  "name": "native-federation-typescript",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/native-federation-typescript/src",
  "projectType": "library",
  "targets": {
    "build": {
      "executor": "nx:run-commands",
      "outputs": ["{workspaceRoot}/dist/packages/native-federation-typescript"],
      "options": {
        "parallel": false,
        "commands": [
          "tsup --config packages/native-federation-typescript/tsup.config.ts",
          "cp packages/native-federation-typescript/package.json dist/packages/native-federation-typescript",
          "cp packages/native-federation-typescript/*.md dist/packages/native-federation-typescript"
        ]
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["packages/native-federation-typescript/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nx/vite:test",
      "outputs": [
        "{workspaceRoot}/coverage/packages/native-federation-typescript"
      ]
    },
    "release": {
      "executor": "nx:run-commands",
      "options": {
        "parallel": false,
        "commands": [
          {
            "command": "nx run native-federation-typescript:test",
            "forwardAllArgs": false
          },
          {
            "command": "nx run native-federation-typescript:build",
            "forwardAllArgs": false
          },
          {
            "command": "nx run native-federation-typescript:semantic-release",
            "forwardAllArgs": true
          }
        ]
      }
    },
    "semantic-release": {
      "executor": "@goestav/nx-semantic-release:semantic-release",
      "options": {
        "changelog": true,
        "git": true,
        "npm": true,
        "github": true,
        "repositoryUrl": "https://github.com/brunos3d/universe",
        "outputPath": "dist/packages/${PROJECT_NAME}",
        "tagFormat": "${PROJECT_NAME}-v${VERSION}",
        "commitMessage": "chore(release): Release ${PROJECT_NAME} v${nextRelease.version} [skip ci]",
        "branches": [
          {
            "name": "main",
            "channel": "latest"
          },
          {
            "name": "next",
            "channel": "next",
            "prerelease": "rc"
          },
          {
            "name": "develop",
            "channel": "alpha",
            "prerelease": "alpha"
          }
        ],
        "releaseRules": [
          { "breaking": true, "release": "major" },
          { "type": "docs", "release": "patch" },
          { "type": "refactor", "release": "patch" },
          { "type": "style", "release": "patch" },
          { "type": "perf", "release": "patch" },
          { "type": "build", "release": "patch" }
        ],
        "preset": "conventionalcommits",
        "presetConfig": {
          "types": [
            { "type": "feat", "section": "Features" },
            { "type": "fix", "section": "Bug Fixes" },
            { "type": "chore", "hidden": true },
            { "type": "docs", "section": "Documentation" },
            { "type": "style", "hidden": true },
            { "type": "refactor", "section": "Refactors" },
            { "type": "build", "section": "Build config" },
            { "type": "perf", "hidden": true },
            { "type": "test", "hidden": true }
          ]
        }
      }
    }
  },
  "tags": ["package"],
  "implicitDependencies": []
}
